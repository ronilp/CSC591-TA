# File: peer_grades.py
# Author: Ronil Pancholia
# Date: 5/6/19
# Time: 3:30 AM
from easydict import EasyDict

team_ids = [1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,7,8,8,8,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,28,29,29,29,30,30,30,31,31,31,31,32,32,33,33,33,34,34,34,34,35,35,35,36,36,36,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45]
read = [4,4,5,3,4,4,5,4,4,5,4,4,5,5,4,5,4,3,4,5,4,5,5,5,5,5,5,5,5,4,5,4,3,4,5,5,5,3,5,4,3,4,5,5,4,4,5,5,5,3,5,4,5,4,5,5,4,4,5,4,4,5,4,3,5,5,3,5,4,5,4,3,5,5,4,5,4,4,3,5,4,5,5,4,4,5,4,4,5,4,4,5,5,5,4,5,2,3,5,4,5,5,5,5,5,5,4,5,5,5,3,4,4,5,5,5,5,5,5,4,4,4,4,5,2,5,4,4,5,5,5,4,5,5,5]
instructions = [5,4,5,3,4,3,5,5,4,5,4,4,5,5,4,5,5,5,4,5,4,5,5,4,5,5,5,5,5,5,5,4,5,4,5,5,5,4,5,5,3,5,5,5,5,5,5,3,5,4,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,2,4,5,5,5,4,5,5,5,5,5,4,2,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,4,5,2,5,5,5,4,4,5,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,4,3,5,3,5,5,5,5,5,5,5,5]
ppt = [5,4,5,5,5,3,4,5,2,5,5,4,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5,5,5,4,4,4,4,4,5,5,4,3,5,5,4,3,5,5,3,4,5,4,5,3,5,4,5,5,5,4,5,4,3,5,4,4,5,4,5,5,3,5,3,5,5,5,4,5,5,5,4,4,3,5,5,5,5,4,3,5,5,5,5,5,5,3,5,5,4,4,3,4,5,4,5,4,5,4,5,5,5,4,5,5,4,5,4,5,5,4,4,5,4,4,4,5,5,5,5,4,4,3,5,5,5,5,5,5,5]
video = [9,8,10,7,10,7,10,10,7,10,7,7,10,10,8,9,9,8,10,9,8,10,9,10,10,10,9,10,8,10,8,8,10,9,10,10,8,9,10,9,7,9,10,10,7,9,10,8,9,7,10,9,9,9,10,9,9,9,9,10,10,10,9,9,8,8,8,10,8,10,8,9,10,9,10,9,9,9,5,10,8,10,9,8,9,10,10,10,10,10,10,8,10,10,9,9,6,8,10,9,10,7,6,9,10,10,9,8,9,10,8,9,7,10,9,10,10,10,8,10,8,9,9,10,8,9,9,9,9,10,10,10,10,10,10]
writeup = [10,8,10,3,7,7,10,9,7,10,9,7,10,10,9,10,9,7,9,9,8,10,10,10,10,10,10,10,8,10,9,8,9,9,10,9,8,6,10,9,7,9,9,10,6,8,9,7,10,7,10,9,10,8,10,10,5,6,2,9,10,9,9,9,9,6,7,9,8,10,9,10,9,9,9,10,9,8,6,10,9,10,9,7,8,10,9,10,10,9,10,10,10,10,10,10,8,8,10,0,10,5,0,10,10,10,10,9,9,10,7,10,8,9,9,10,10,10,9,10,9,10,10,10,7,9,10,8,9,10,10,10,10,10,10]
dataset = [4,4,5,5,5,3,5,5,2,5,5,5,5,5,3,4,5,4,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,4,5,4,4,3,5,5,3,5,5,5,5,5,5,4,5,4,5,4,5,5,5,5,5,4,5,5,5,5,4,4,5,4,3,5,5,5,5,5,5,5,4,4,4,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,2,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,4,4,5,5,5,5,5,5,5,5,4]

read_avg = {}
instructions_avg = {}
ppt_avg = {}
video_avg = {}
writeup_avg = {}
dataset_avg = {}

counts = {}
for i in range(len(team_ids)):
    team_id = team_ids[i]
    if team_id not in counts.keys():
        counts[team_id] = 0

    counts[team_id] += 1

def compute(team_ids, scores, dic):
    for i in range(len(team_ids)):
        team_id = team_ids[i]
        if team_id not in dic.keys():
            dic[team_id] = 0

        curr = dic[team_id]
        dic[team_id] = curr + scores[i]

    for key in dic.keys():
        dic[key] = (1.0*dic[key])/counts[key]

    print(dic)
    return dic

read_avg = compute(team_ids, read, read_avg)
instructions_avg = compute(team_ids, instructions, instructions_avg)
ppt_avg = compute(team_ids, ppt, ppt_avg)
video_avg = compute(team_ids, video, video_avg)
writeup_avg = compute(team_ids, writeup, writeup_avg)
dataset_avg = compute(team_ids, dataset, dataset_avg)

total = {}

for key in read_avg:
    total[key] = read_avg[key] + instructions_avg[key] + ppt_avg[key] + video_avg[key] + writeup_avg[key] + dataset_avg[key]

for key in total.keys():
    total[key] = 20 + 2 * total[key]

def print_dic(dic):
    for key in dic.keys():
        print("%.2f" % dic[key])


print("read")
print_dic(read_avg)

print("instructions")
print_dic(instructions_avg)

print("ppt")
print_dic(ppt_avg)

print("video")
print_dic(video_avg)

print("writeup")
print_dic(writeup_avg)

print("dataset")
print_dic(dataset_avg)